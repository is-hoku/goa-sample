// Code generated by goa v3.7.6, DO NOT EDIT.
//
// students client HTTP transport
//
// Command:
// $ goa gen github.com/is-hoku/goa-template/webapi/design

package client

import (
	"context"
	"net/http"

	goahttp "goa.design/goa/v3/http"
	goa "goa.design/goa/v3/pkg"
)

// Client lists the students service endpoint HTTP clients.
type Client struct {
	// GetStudent Doer is the HTTP client used to make requests to the get student
	// endpoint.
	GetStudentDoer goahttp.Doer

	// GetStudents Doer is the HTTP client used to make requests to the get
	// students endpoint.
	GetStudentsDoer goahttp.Doer

	// CreateStudent Doer is the HTTP client used to make requests to the create
	// student endpoint.
	CreateStudentDoer goahttp.Doer

	// CORS Doer is the HTTP client used to make requests to the  endpoint.
	CORSDoer goahttp.Doer

	// RestoreResponseBody controls whether the response bodies are reset after
	// decoding so they can be read again.
	RestoreResponseBody bool

	scheme  string
	host    string
	encoder func(*http.Request) goahttp.Encoder
	decoder func(*http.Response) goahttp.Decoder
}

// NewClient instantiates HTTP clients for all the students service servers.
func NewClient(
	scheme string,
	host string,
	doer goahttp.Doer,
	enc func(*http.Request) goahttp.Encoder,
	dec func(*http.Response) goahttp.Decoder,
	restoreBody bool,
) *Client {
	return &Client{
		GetStudentDoer:      doer,
		GetStudentsDoer:     doer,
		CreateStudentDoer:   doer,
		CORSDoer:            doer,
		RestoreResponseBody: restoreBody,
		scheme:              scheme,
		host:                host,
		decoder:             dec,
		encoder:             enc,
	}
}

// GetStudent returns an endpoint that makes HTTP requests to the students
// service get student server.
func (c *Client) GetStudent() goa.Endpoint {
	var (
		decodeResponse = DecodeGetStudentResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildGetStudentRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.GetStudentDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("students", "get student", err)
		}
		return decodeResponse(resp)
	}
}

// GetStudents returns an endpoint that makes HTTP requests to the students
// service get students server.
func (c *Client) GetStudents() goa.Endpoint {
	var (
		decodeResponse = DecodeGetStudentsResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildGetStudentsRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.GetStudentsDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("students", "get students", err)
		}
		return decodeResponse(resp)
	}
}

// CreateStudent returns an endpoint that makes HTTP requests to the students
// service create student server.
func (c *Client) CreateStudent() goa.Endpoint {
	var (
		decodeResponse = DecodeCreateStudentResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildCreateStudentRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.CreateStudentDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("students", "create student", err)
		}
		return decodeResponse(resp)
	}
}
