// Code generated by goa v3.7.6, DO NOT EDIT.
//
// health views
//
// Command:
// $ goa gen github.com/is-hoku/goa-sample/webapi/design

package views

import (
	goa "goa.design/goa/v3/pkg"
)

// HealthResult is the viewed result type that is projected based on a view.
type HealthResult struct {
	// Type to project
	Projected *HealthResultView
	// View to render
	View string
}

// HealthResultView is a type that runs validations on a projected type.
type HealthResultView struct {
	// health message
	Message *string
}

var (
	// HealthResultMap is a map indexing the attribute names of HealthResult by
	// view name.
	HealthResultMap = map[string][]string{
		"default": {
			"message",
		},
	}
)

// ValidateHealthResult runs the validations defined on the viewed result type
// HealthResult.
func ValidateHealthResult(result *HealthResult) (err error) {
	switch result.View {
	case "default", "":
		err = ValidateHealthResultView(result.Projected)
	default:
		err = goa.InvalidEnumValueError("view", result.View, []interface{}{"default"})
	}
	return
}

// ValidateHealthResultView runs the validations defined on HealthResultView
// using the "default" view.
func ValidateHealthResultView(result *HealthResultView) (err error) {
	if result.Message == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("message", "result"))
	}
	return
}
